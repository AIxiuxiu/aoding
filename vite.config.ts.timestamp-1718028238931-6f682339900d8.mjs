// vite.config.ts
import { resolve } from "path";
import { defineConfig, loadEnv } from "file:///Users/ahl/work/web-project/node_modules/.pnpm/vite@5.2.11_@types+node@20.12.12_sass@1.77.2_terser@5.31.0/node_modules/vite/dist/node/index.js";

// vite/plugins/index.ts
import vue from "file:///Users/ahl/work/web-project/node_modules/.pnpm/@vitejs+plugin-vue@5.0.4_vite@5.2.11_@types+node@20.12.12_sass@1.77.2_terser@5.31.0__vue@3.4.27_typescript@5.4.5_/node_modules/@vitejs/plugin-vue/dist/index.mjs";
import vueJsx from "file:///Users/ahl/work/web-project/node_modules/.pnpm/@vitejs+plugin-vue-jsx@4.0.0_vite@5.2.11_@types+node@20.12.12_sass@1.77.2_terser@5.31.0__vue@3.4.27_typescript@5.4.5_/node_modules/@vitejs/plugin-vue-jsx/dist/index.mjs";
import progress from "file:///Users/ahl/work/web-project/node_modules/.pnpm/vite-plugin-progress@0.0.7_vite@5.2.11_@types+node@20.12.12_sass@1.77.2_terser@5.31.0_/node_modules/vite-plugin-progress/dist/index.mjs";

// vite/plugins/auto-import.ts
import AutoImport from "file:///Users/ahl/work/web-project/node_modules/.pnpm/unplugin-auto-import@0.17.6_@vueuse+core@9.13.0_vue@3.4.27_typescript@5.4.5___rollup@4.18.0/node_modules/unplugin-auto-import/dist/vite.js";
import { ElementPlusResolver } from "file:///Users/ahl/work/web-project/node_modules/.pnpm/unplugin-vue-components@0.27.0_@babel+parser@7.24.7_rollup@4.18.0_vue@3.4.27_typescript@5.4.5_/node_modules/unplugin-vue-components/dist/resolvers.js";
function autoImportDeps() {
  return AutoImport({
    //安装后在组件中不用再导入ref，reactive等
    imports: ["vue", "vue-router"],
    // 自动引入的三方库
    resolvers: [ElementPlusResolver({ importStyle: "sass" })],
    // 引入element-plus
    dts: "src/types/auto-import.d.ts"
    // 全局自动引入文件存放路径；不配置保存在根目录下；配置为false时不会生成 auto-imports.d.ts 文件，但不影响使用
  });
}

// vite/plugins/components.ts
import Components from "file:///Users/ahl/work/web-project/node_modules/.pnpm/unplugin-vue-components@0.27.0_@babel+parser@7.24.7_rollup@4.18.0_vue@3.4.27_typescript@5.4.5_/node_modules/unplugin-vue-components/dist/vite.js";
import { ElementPlusResolver as ElementPlusResolver2 } from "file:///Users/ahl/work/web-project/node_modules/.pnpm/unplugin-vue-components@0.27.0_@babel+parser@7.24.7_rollup@4.18.0_vue@3.4.27_typescript@5.4.5_/node_modules/unplugin-vue-components/dist/resolvers.js";
import IconsResolver from "file:///Users/ahl/work/web-project/node_modules/.pnpm/unplugin-icons@0.19.0_@vue+compiler-sfc@3.4.27_vue-template-compiler@2.7.16/node_modules/unplugin-icons/dist/resolver.js";
function autoRegistryComponents() {
  return Components({
    globs: ["**/src/components/*.vue"],
    dts: "src/types/components.d.ts",
    // 引入组件的,包括自定义组件存放的位置
    resolvers: [
      ElementPlusResolver2({ importStyle: "sass" }),
      //引入element-plus
      // Icon自动引入解析器
      IconsResolver({
        // 自动引入的Icon组件统一前缀，默认为 i，设置false为不需要前缀
        prefix: "icon",
        // 当图标集名字过长时，可使用集合别名
        alias: {
          system: "system-uicons"
        },
        // 标识自定义图标集
        customCollections: ["an"]
        // prefix - 前缀，默认为 i，上面我们配置成了 icon，即组件名以 icon 开头
        // collection - 图标集名
        // icon - 图标名
        // {prefix}-{collection}-{icon}
        // 当然大驼峰也可以
      })
    ]
  });
}

// vite/plugins/compression.ts
import compression from "file:///Users/ahl/work/web-project/node_modules/.pnpm/vite-plugin-compression@0.5.1_vite@5.2.11_@types+node@20.12.12_sass@1.77.2_terser@5.31.0_/node_modules/vite-plugin-compression/dist/index.mjs";
function createCompression(env) {
  const { VITE_BUILD_COMPRESS } = env;
  const compressList = VITE_BUILD_COMPRESS.split(",");
  const plugin = [];
  if (compressList.includes("gzip")) {
    plugin.push(
      compression({
        ext: ".gz",
        deleteOriginFile: false
      })
    );
  }
  if (compressList.includes("brotli")) {
    plugin.push(
      compression({
        ext: ".br",
        algorithm: "brotliCompress",
        deleteOriginFile: false
      })
    );
  }
  return plugin;
}

// vite/plugins/html.ts
import { createHtmlPlugin } from "file:///Users/ahl/work/web-project/node_modules/.pnpm/vite-plugin-html@3.2.2_vite@5.2.11_@types+node@20.12.12_sass@1.77.2_terser@5.31.0_/node_modules/vite-plugin-html/dist/index.mjs";
function createHtml(env, mini) {
  const { VITE_APP_TITLE } = env;
  const html = createHtmlPlugin({
    inject: {
      data: {
        title: VITE_APP_TITLE
      }
    },
    minify: mini
  });
  return html;
}

// vite/plugins/icons.ts
import { FileSystemIconLoader } from "file:///Users/ahl/work/web-project/node_modules/.pnpm/unplugin-icons@0.19.0_@vue+compiler-sfc@3.4.27_vue-template-compiler@2.7.16/node_modules/unplugin-icons/dist/loaders.js";
import Icons from "file:///Users/ahl/work/web-project/node_modules/.pnpm/unplugin-icons@0.19.0_@vue+compiler-sfc@3.4.27_vue-template-compiler@2.7.16/node_modules/unplugin-icons/dist/vite.js";
function createIcon() {
  return Icons({
    compiler: "vue3",
    // 自动安装
    autoInstall: true,
    customCollections: {
      // an 图标集
      // 给svg文件设置fill="currentColor"属性，使图标的颜色具有适应性
      an: FileSystemIconLoader("src/assets/icons", (svg) => svg.replace(/^<svg /, '<svg fill="currentColor" '))
    }
  });
}

// vite/plugins/restart.ts
import ViteRestart from "file:///Users/ahl/work/web-project/node_modules/.pnpm/vite-plugin-restart@0.4.0_vite@5.2.11_@types+node@20.12.12_sass@1.77.2_terser@5.31.0_/node_modules/vite-plugin-restart/dist/index.js";
function viteRestartConfig() {
  return ViteRestart({
    restart: ["**/.env.*", "**/vite.config.ts", "**/vite/plugins/*.ts"]
  });
}

// vite/plugins/version.ts
import { writeFileSync } from "fs";
function htmlVersion() {
  const version = `${Date.now()}`;
  return {
    name: "html-version",
    transformIndexHtml(html) {
      return html.replace(/<html/, `<html data-version="${version}"`);
    },
    configResolved(config) {
      writeFileSync(config.publicDir + "/version.json", JSON.stringify({ version }));
    }
  };
}

// vite/plugins/visualizer.ts
import { visualizer } from "file:///Users/ahl/work/web-project/node_modules/.pnpm/rollup-plugin-visualizer@5.12.0_rollup@4.18.0/node_modules/rollup-plugin-visualizer/dist/plugin/index.js";
function visualizerConfig(env) {
  const { VITE_BUILD_ANALYSIS } = env;
  if (VITE_BUILD_ANALYSIS == "true") {
    return visualizer({
      filename: "./node_modules/.cache/visualizer/stats.html",
      open: true,
      gzipSize: true,
      brotliSize: true
    });
  }
}

// vite/plugins/index.ts
function getVitePlugins(viteEnv, isBuild = false) {
  const vitePlugins = [vue(), vueJsx()];
  vitePlugins.push(autoImportDeps());
  vitePlugins.push(autoRegistryComponents());
  vitePlugins.push(...createHtml(viteEnv, isBuild));
  vitePlugins.push(createIcon());
  vitePlugins.push(progress());
  if (isBuild) {
    vitePlugins.push(htmlVersion());
    vitePlugins.push(...createCompression(viteEnv));
    vitePlugins.push(visualizerConfig(viteEnv));
  } else {
    vitePlugins.push(viteRestartConfig());
  }
  return vitePlugins;
}

// vite.config.ts
var __vite_injected_original_dirname = "/Users/ahl/work/web-project";
var vite_config_default = ({ mode, command }) => {
  const env = loadEnv(mode, process.cwd());
  return defineConfig({
    envDir: process.cwd(),
    base: env.VITE_SERVER_BASE,
    plugins: getVitePlugins(env, command === "build"),
    server: {
      port: +env.VITE_SERVER_PORT,
      host: "0.0.0.0",
      // IP配置，支持从IP启动
      hmr: { overlay: false },
      // 禁用或配置 HMR 连接 设置 server.hmr.overlay 为 false 可以禁用服务器错误遮罩层
      open: false
    },
    build: {
      outDir: env.VITE_BUILD_OUTDIR,
      sourcemap: env.VITE_BUILD_SOURCEMAP == "true",
      emptyOutDir: true,
      minify: "esbuild",
      reportCompressedSize: false,
      chunkSizeWarningLimit: 2048,
      rollupOptions: {
        // 静态资源分类打包
        output: {
          chunkFileNames: "static/js/[name]-[hash].js",
          entryFileNames: "static/js/[name]-[hash].js"
        }
      }
    },
    resolve: {
      alias: {
        "@": resolve(__vite_injected_original_dirname, "./src")
      }
    },
    css: {
      preprocessorOptions: {
        scss: {
          charset: false,
          additionalData: `@use "@/styles/element.scss" as *; `
        }
      }
    },
    // 删除 console
    esbuild: {
      drop: env.VITE_BUILD_DROP_CONSOLE == "true" ? ["console", "debugger"] : ["debugger"]
    },
    ssr: {
      noExternal: ["element-plus", "vue-i18n"]
    },
    ssgOptions: {
      crittersOptions: {
        //  options: https://github.com/GoogleChromeLabs/critters#usage
        preload: "media"
      }
    }
  });
};
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,
